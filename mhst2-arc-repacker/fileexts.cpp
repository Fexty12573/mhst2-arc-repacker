
#include "fileexts.h"
#include <boost/crc.hpp>

std::map<std::string, unsigned int> fileExts;
std::map<int, std::string> fileExtsReversed;

unsigned int crc32(const std::u8string& s)
{
    boost::crc_32_type r;
    r.process_bytes(s.data(), s.size());
    return r.checksum();
}

unsigned int jamcrc(const std::u8string& s)
{
    return (crc32(s) ^ 0xFFFFFFFF) & 0x7FFFFFFF;
}

void initFileExts()
{
    fileExts[".btb"] = jamcrc(u8"rBattleBinary");
    fileExts[".bccmd"] = jamcrc(u8"rBattleCutCmdData");
    fileExts[".bsset"] = jamcrc(u8"rBattleSelectSetData");
    fileExts[".afpd"] = jamcrc(u8"rAgingFieldPatrolDataNative");
    fileExts[".cut"] = jamcrc(u8"rTalkDemoCut");
    fileExts[".tsnd"] = jamcrc(u8"rTalkDemoSound");
    fileExts[".work"] = jamcrc(u8"rTalkDemoWorkOriginInfo");
    fileExts[".pos"] = jamcrc(u8"rTalkDemoObjInitPos");
    fileExts[".fedad"] = jamcrc(u8"rFieldEnemyDefaultAifsmDataNaitive");
    fileExts[".fci"] = jamcrc(u8"rFieldConnectionInfoNative");
    fileExts[".fpi"] = jamcrc(u8"rFieldPartsInfoNative");
    fileExts[".fpl"] = jamcrc(u8"rFieldPartsLayoutNative");
    fileExts[".ts"] = jamcrc(u8"rTraceSonarNative");
    fileExts[".fpos"] = jamcrc(u8"rFieldPlacementObjectSetNative");
    fileExts[".fco"] = jamcrc(u8"rFieldCamOption");
    fileExts[".dai"] = jamcrc(u8"rDungeonInfoListNative");
    fileExts[".fntl"] = jamcrc(u8"rFieldNpcNekoTaxiList");
    fileExts[".fol"] = jamcrc(u8"rFieldObjectList");
    fileExts[".fcr"] = jamcrc(u8"rFieldCamera");
    fileExts[".occ2"] = jamcrc(u8"rOccluder2Native");
    fileExts[".idd"] = jamcrc(u8"rInstanceDrawDistance");
    fileExts[".idcol"] = jamcrc(u8"rIDColor");
    fileExts[".ipr"] = jamcrc(u8"rInstancePlacement");
    fileExts[".pmc"] = jamcrc(u8"rPlayerMoveConfigData");
    fileExts[".sgs"] = jamcrc(u8"rSoundGuiSe");
    fileExts[".spoc"] = jamcrc(u8"rSoundParamOffsetControl");
    fileExts[".pts"] = jamcrc(u8"rSoundPelTiedSe");
    fileExts[".sar"] = jamcrc(u8"rSoundAreaReverb");
    fileExts[".sss"] = jamcrc(u8"rSoundSystemSetting");
    fileExts[".sptl"] = jamcrc(u8"rSoundPronounceList");
    fileExts[".ejpd"] = jamcrc(u8"rEnaJoinProgressDataNative");
    fileExts[".klpd"] = jamcrc(u8"rKizunaLvProgressDataNative");
    fileExts[".rjpd"] = jamcrc(u8"rReusJoinProgressDataNative");
    fileExts[".fdi"] = jamcrc(u8"rFieldDirectionInfoNative");
    fileExts[".abbt"] = jamcrc(u8"rAgingBtlBuddyTableNative");
    fileExts[".abest"] = jamcrc(u8"rAgingBtlEnemySetTableNative");
    fileExts[".abst"] = jamcrc(u8"rAgingBtlStageTableNative");
    fileExts[".acb"] = jamcrc(u8"rAgingCheckBuddyNative");
    fileExts[".acela"] = jamcrc(u8"rAgingCheckEnaLayArmorNative");
    fileExts[".acna"] = jamcrc(u8"rAgingCheckNaviAccesoryNative");
    fileExts[".acpa"] = jamcrc(u8"rAgingCheckPlArmorNative");
    fileExts[".acwp"] = jamcrc(u8"rAgingCheckWeaponNative");
    fileExts[".aft"] = jamcrc(u8"rAgingFieldTableNative");
    fileExts[".cctib"] = jamcrc(u8"rCheatCheckTableItemBattleNative");
    fileExts[".cctbw"] = jamcrc(u8"rCheatCheckTableWeaponBowNative");
    fileExts[".cctgn"] = jamcrc(u8"rCheatCheckTableWeaponGunNative");
    fileExts[".bdkc"] = jamcrc(u8"rDoubleKizunaCameraOffsetNative");
    fileExts[".bdkmc"] = jamcrc(u8"rDoubleKizunaMonsterConditionNative");
    fileExts[".bdkm"] = jamcrc(u8"rDoubleKizunaMonsterOffsetNative");
    fileExts[".bdkd"] = jamcrc(u8"rDoubleKizunaSchedulerPathNative");
    fileExts[".acdd"] = jamcrc(u8"rActionCommandDelayTimeDataNative");
    fileExts[".asp"] = jamcrc(u8"rAnimationSecondParamNative");
    fileExts[".cdi"] = jamcrc(u8"rGuiClearedDungeonItemParamNative");
    fileExts[".gcol"] = jamcrc(u8"rGuiColorDataNative");
    fileExts[".gfad"] = jamcrc(u8"rGuiFadeDataNative");
    fileExts[".ghbp"] = jamcrc(u8"rGuiHatchBabyParamNative");
    fileExts[".gmdc"] = jamcrc(u8"rGuiModelDrawCameraParamNative");
    fileExts[".gmdw"] = jamcrc(u8"rGuiModelDrawWindowParamNative");
    fileExts[".gmmp"] = jamcrc(u8"rGuiMonsterModelParamNative");
    fileExts[".gmvp"] = jamcrc(u8"rGuiMultiVsPlayerParamNative");
    fileExts[".gnpc"] = jamcrc(u8"rGuiNpcModelParamNative");
    fileExts[".gpm"] = jamcrc(u8"rGuiParamNative");
    fileExts[".grcb"] = jamcrc(u8"rGuiRiderCardBuddyParamNative");
    fileExts[".gspp"] = jamcrc(u8"rGuiStatusPlayerParamNative");
    fileExts[".gtbp"] = jamcrc(u8"rGuiTraditionBuddyParamNative");
    fileExts[".gwmp"] = jamcrc(u8"rGuiWeaponModelParamNative");
    fileExts[".aic"] = jamcrc(u8"rAchievementIconNative");
    fileExts[".cic"] = jamcrc(u8"rCommandIconNative");
    fileExts[".isd"] = jamcrc(u8"rIconStatusDataNative");
    fileExts[".iic"] = jamcrc(u8"rItemIconNative");
    fileExts[".mic"] = jamcrc(u8"rMonsterIconNative");
    fileExts[".sic"] = jamcrc(u8"rSkillIconNative");
    fileExts[".drmd"] = jamcrc(u8"rDramaMessageDataNative");
    fileExts[".fcmd"] = jamcrc(u8"rFieldCommonMessageDataNative");
    fileExts[".grmd"] = jamcrc(u8"rGameMessageDataNative");
    fileExts[".ntlkd"] = jamcrc(u8"rNpcMessageDataNative");
    fileExts[".tlkd"] = jamcrc(u8"rTalkMessageDataNative");
    fileExts[".okbd"] = jamcrc(u8"rOptionKeyConfigButtonDataNative");
    fileExts[".okd"] = jamcrc(u8"rOptionKeyConfigDataNative");
    fileExts[".okkd"] = jamcrc(u8"rOptionKeyConfigKeyboardDataNative");
    fileExts[".lad"] = jamcrc(u8"rOptionLanguageDataNative");
    fileExts[".opd"] = jamcrc(u8"rOptionParamDataNative");
    fileExts[".osd"] = jamcrc(u8"rOptionSettingDataNative");
    fileExts[".agt"] = jamcrc(u8"rAmiiboGiftNative");
    fileExts[".bbcnd"] = jamcrc(u8"rBattleBuddyConditionDataNative");
    fileExts[".bccam"] = jamcrc(u8"rBattleCmdCameraDataNative");
    fileExts[".bcige"] = jamcrc(u8"rBattleCmdIgnoreEnemyDataNative");
    fileExts[".behi"] = jamcrc(u8"rBattleEffHitInfoDataNative");
    fileExts[".bemct"] = jamcrc(u8"rBattleEnemyMCTblNative");
    fileExts[".bert"] = jamcrc(u8"rBattleEventResourceDataNative");
    fileExts[".berd"] = jamcrc(u8"rBattleEventResultDataNative");
    fileExts[".bet"] = jamcrc(u8"rBattleEventTblNative");
    fileExts[".bmcd"] = jamcrc(u8"rBattleMorphChangeDataNative");
    fileExts[".bmcnd"] = jamcrc(u8"rBattleMorphConditionDataNative");
    fileExts[".bnft"] = jamcrc(u8"rBattleNavirouFsmTableNative");
    fileExts[".bnmt"] = jamcrc(u8"rBattleNavirouMessageNative");
    fileExts[".bnst"] = jamcrc(u8"rBattleNavirouSetTableNative");
    fileExts[".bnut"] = jamcrc(u8"rBattleNavirouUniqueNative");
    fileExts[".bptcnd"] = jamcrc(u8"rBattlePartsConditionDataNative");
    fileExts[".bcatData"] = jamcrc(u8"rBCATAppDataNative");
    fileExts[".bbc"] = jamcrc(u8"rBingoBonusCategoryNative");
    fileExts[".bfofd"] = jamcrc(u8"rBreakFieldObjectDataNative");
    fileExts[".bdbcm"] = jamcrc(u8"rBuddyBtlMCDataNative");
    fileExts[".chcl"] = jamcrc(u8"rCharaCustomLogDataNative");
    fileExts[".crd"] = jamcrc(u8"rCharaRemakeTicketDataNative");
    fileExts[".dgd"] = jamcrc(u8"rDemoGalleryDataNative");
    fileExts[".dcc"] = jamcrc(u8"rDifficultyConvertCountNative");
    fileExts[".dcgf"] = jamcrc(u8"rDifficultyConvertGameFlagNative");
    fileExts[".dlcData"] = jamcrc(u8"rDLCAppDataNative");
    fileExts[".dlcView"] = jamcrc(u8"rDLCViewDataNative");
    fileExts[".dclt"] = jamcrc(u8"rDungeonChestLotTableNative");
    fileExts[".dcd"] = jamcrc(u8"rDungeonContainsDataNative");
    fileExts[".dcp"] = jamcrc(u8"rDungeonCreatePatternNative");
    fileExts[".demd"] = jamcrc(u8"rDungeonEggMonsterDataNative");
    fileExts[".defd"] = jamcrc(u8"rDungeonEnemyFixedDataNative");
    fileExts[".deh"] = jamcrc(u8"rDungeonEnemyHomingDataNative");
    fileExts[".deloc"] = jamcrc(u8"rDungeonEnemyLocatorDataNative");
    fileExts[".deld"] = jamcrc(u8"rDungeonEnemyLotDataNative");
    fileExts[".dnrd"] = jamcrc(u8"rDungeonNestRarenessDataNative");
    fileExts[".eup"] = jamcrc(u8"rEggUniquePatternDataNative");
    fileExts[".ecr"] = jamcrc(u8"rEnvCreatureDataNative");
    fileExts[".exfd"] = jamcrc(u8"rExpeditionFieldDataNative");
    fileExts[".expl"] = jamcrc(u8"rExpeditionPolicyDataNative");
    fileExts[".esd"] = jamcrc(u8"rExpeditionSlotNumDataNative");
    fileExts[".fldamb"] = jamcrc(u8"rFieldAmbientDataNative");
    fileExts[".fpd"] = jamcrc(u8"rFieldPartsDataNative");
    fileExts[".fldpn"] = jamcrc(u8"rFieldPartsNameDataNative");
    fileExts[".fldsky"] = jamcrc(u8"rFieldSkyDataNative");
    fileExts[".flds"] = jamcrc(u8"rFieldSpotDataNative");
    fileExts[".fdcd"] = jamcrc(u8"rFixedDungeonConfigDataNative");
    fileExts[".fgt"] = jamcrc(u8"rFortuneGiftNative");
    fileExts[".grset"] = jamcrc(u8"rGeneRandomSetNative");
    fileExts[".tgb"] = jamcrc(u8"rGiftBuddyTableNative");
    fileExts[".tge"] = jamcrc(u8"rGiftEggTableNative");
    fileExts[".fnd"] = jamcrc(u8"rGuiFontDataNative");
    fileExts[".gfld"] = jamcrc(u8"rGuiFontLanguageDataNative");
    fileExts[".ltd"] = jamcrc(u8"rGuiLocalizeTextureDataNative");
    fileExts[".msgm"] = jamcrc(u8"rGuiMessageDataNative");
    fileExts[".gwm"] = jamcrc(u8"rGuiWorldMapNative");
    fileExts[".hbt"] = jamcrc(u8"rHabitatDataNative");
    fileExts[".hdu"] = jamcrc(u8"rHardDungeonUIDataNative");
    fileExts[".heb"] = jamcrc(u8"rHatchEggBonusDataNative");
    fileExts[".ecd"] = jamcrc(u8"rEditCameraDataNative");
    fileExts[".ecp"] = jamcrc(u8"rEditColorPresetDataNative");
    fileExts[".eed"] = jamcrc(u8"rEditEyeShapeDataNative");
    fileExts[".efd"] = jamcrc(u8"rEditFaceShapeDataNative");
    fileExts[".ehd"] = jamcrc(u8"rEditHairstyleDataNative");
    fileExts[".emad"] = jamcrc(u8"rEditMakeupTypeDataNative");
    fileExts[".emod"] = jamcrc(u8"rEditMouthShapeDataNative");
    fileExts[".epd"] = jamcrc(u8"rEditParamDataNative");
    fileExts[".evd"] = jamcrc(u8"rEditVoiceTypeDataNative");
    fileExts[".ldd"] = jamcrc(u8"rLinkedDungeonDataNative");
    fileExts[".macd"] = jamcrc(u8"rMelynxShopAccessoryDataNative");
    fileExts[".mard"] = jamcrc(u8"rMelynxShopArmorDataNative");
    fileExts[".msp"] = jamcrc(u8"rMelynxShopDataNative");
    fileExts[".mwd"] = jamcrc(u8"rMelynxShopWeaponDataNative");
    fileExts[".mrnd"] = jamcrc(u8"rMenuRiderNoteDataNative");
    fileExts[".mtnscl"] = jamcrc(u8"rModTextureNoScaleDataNative");
    fileExts[".mas"] = jamcrc(u8"rMonsterAdditionalShowTableNative");
    fileExts[".mbi"] = jamcrc(u8"rMonsterBaseInfoDataNative");
    fileExts[".ses"] = jamcrc(u8"rMHSoundEmitter");
    fileExts[".mss"] = jamcrc(u8"rMHSoundSequence");
    fileExts[".aser"] = jamcrc(u8"rSoundAttributeSe");
    fileExts[".engr"] = jamcrc(u8"rSoundEngine");
    fileExts[".engr.xml"] = jamcrc(u8"rSoundEngineXml");
    fileExts[".egvr"] = jamcrc(u8"rSoundEngineValue");
    fileExts[".mser"] = jamcrc(u8"rSoundMotionSe");
    fileExts[".ssqr"] = jamcrc(u8"rSoundSequenceSe");
    fileExts[".sscr"] = jamcrc(u8"rSoundSimpleCurve");
    fileExts[".smxr.xml"] = jamcrc(u8"rSoundSubMixerXml");
    fileExts[".smxr"] = jamcrc(u8"rSoundSubMixer");
    fileExts[".smxr"] = jamcrc(u8"uSoundSubMixer::CurrentSubMixer");
    fileExts[".mpt"] = jamcrc(u8"rMonsterPartsTableNative");
    fileExts[".ngt"] = jamcrc(u8"rNavirouGuideDataNative");
    fileExts[".nft"] = jamcrc(u8"rNpc2dFaceTexTableNative");
    fileExts[".nasmd"] = jamcrc(u8"rNpcAirouSetMotionDataNative");
    fileExts[".nlad"] = jamcrc(u8"rNpcLayeredArmorDataNative");
    fileExts[".nsmd"] = jamcrc(u8"rNpcSetMotionDataNative");
    fileExts[".ntrp"] = jamcrc(u8"rNpcTalkResourceDataNative");
    fileExts[".ntz"] = jamcrc(u8"rNpcTalkZoneNative");
    fileExts[".pte"] = jamcrc(u8"rPotEffectDataNative");
    fileExts[".ptl"] = jamcrc(u8"rPotLevelDataNative");
    fileExts[".pto"] = jamcrc(u8"rPotOfferingDataNative");
    fileExts[".ptp"] = jamcrc(u8"rPotPrayingDataNative");
    fileExts[".tppcc"] = jamcrc(u8"rPresetParamCharaCustomNative");
    fileExts[".tppls"] = jamcrc(u8"rPresetParamLearningSkillSetNative");
    fileExts[".tppo"] = jamcrc(u8"rPresetParamOtomonNative");
    fileExts[".tppog"] = jamcrc(u8"rPresetParamOtomonGeneNative");
    fileExts[".rndr"] = jamcrc(u8"rRiderNoteDataRushNative");
    fileExts[".rst"] = jamcrc(u8"rRideSkillTableNative");
    fileExts[".skc"] = jamcrc(u8"rSkillCalcNative");
    fileExts[".wss"] = jamcrc(u8"rSkillSetDataNative");
    fileExts[".scd"] = jamcrc(u8"rStableCapacityDataNative");
    fileExts[".scf"] = jamcrc(u8"rStatusChangeFlagsNative");
    fileExts[".sdt"] = jamcrc(u8"rStatusDataNative");
    fileExts[".sqd"] = jamcrc(u8"rStoryQuestDataNative");
    fileExts[".sqdf"] = jamcrc(u8"rStoryQuestDefineNative");
    fileExts[".sqccd"] = jamcrc(u8"rSubQuestConditionDataNative");
    fileExts[".suqd"] = jamcrc(u8"rSubQuestDataRenewNative");
    fileExts[".svd"] = jamcrc(u8"rSubQuestVeilDataNative");
    fileExts[".sntt"] = jamcrc(u8"rSubstituteNpcTblNative");
    fileExts[".smr"] = jamcrc(u8"rSummaryDataNative");
    fileExts[".tdmspk"] = jamcrc(u8"rTalkDemoDefineDataNative");
    fileExts[".tcn"] = jamcrc(u8"rTrialCleanNativeDataNative");
    fileExts[".tad"] = jamcrc(u8"rTutorialArrowDataNative");
    fileExts[".tld"] = jamcrc(u8"rTutorialLockDataNative");
    fileExts[".vsitemset"] = jamcrc(u8"rVsItemSetDataNative");
    fileExts[".vsprize"] = jamcrc(u8"rVsPrizeDataNative");
    fileExts[".vsrule"] = jamcrc(u8"rVsRuleDataNative");
    fileExts[".sdc"] = jamcrc(u8"rSoundDemoControlNative");
    fileExts[".sdec"] = jamcrc(u8"rSoundDemoEnvControlNative");
    fileExts[".sdsc"] = jamcrc(u8"rSoundDemoSeControlNative");
    fileExts[".sgo"] = jamcrc(u8"rSoundGuiOperationNative");
    fileExts[".siet"] = jamcrc(u8"rSoundInfoSeNative");
    fileExts[".siets"] = jamcrc(u8"rSoundInfoStreamNative");
    fileExts[".samd"] = jamcrc(u8"rSoundArchiveDataNative");
    fileExts[".sad"] = jamcrc(u8"rSoundArmorDataNative");
    fileExts[".sbsd"] = jamcrc(u8"rSoundBattleStageDataNative");
    fileExts[".sbsdef"] = jamcrc(u8"rSoundBattleStageDefineNative");
    fileExts[".sbmd"] = jamcrc(u8"rSoundBgmMonsterDataNative");
    fileExts[".sftd"] = jamcrc(u8"rSoundFootstepDataNative");
    fileExts[".sfcbd"] = jamcrc(u8"rSoundFSMCommandBgmDataNative");
    fileExts[".sfcsd"] = jamcrc(u8"rSoundFSMCommandSeDataNative");
    fileExts[".smd"] = jamcrc(u8"rSoundMonsterDataNative");
    fileExts[".smed"] = jamcrc(u8"rSoundMonsterEnvironmentalDataNative");
    fileExts[".smkd"] = jamcrc(u8"rSoundMonsterKizunaDataNative");
    fileExts[".snad"] = jamcrc(u8"rSoundNpcAirouDataNative");
    fileExts[".snd"] = jamcrc(u8"rSoundNpcDataNative");
    fileExts[".sod"] = jamcrc(u8"rSoundObjectDataNative");
    fileExts[".ssv"] = jamcrc(u8"rSoundSceneVolumeNative");
    fileExts[".swd"] = jamcrc(u8"rSoundWeaponDataNative");
    fileExts[".snvpd"] = jamcrc(u8"rSoundNpcVoicePathDataNative");
    fileExts[".spvpd"] = jamcrc(u8"rSoundPlayerVoicePathDataNative");
    fileExts[".ulm"] = jamcrc(u8"rUnlockMixDataNative");
    fileExts[".ulp"] = jamcrc(u8"rUnlockProgressDataNative");
    fileExts[".uls"] = jamcrc(u8"rUnlockScriptDataNative");
    fileExts[".fpc"] = jamcrc(u8"rFacialPartsComboNative");
    fileExts[".fpctl"] = jamcrc(u8"rFacialPartsControl");
    fileExts[".omg"] = jamcrc(u8"rObjectModelAttachGroupNative");
    fileExts[".omi"] = jamcrc(u8"rObjectModelAttachInfoNative");
    fileExts[".omas"] = jamcrc(u8"rObjectModelAttachSetData");
    fileExts[".mlka"] = jamcrc(u8"rMonsterLookAtParamNative");
    fileExts[".kofb"] = jamcrc(u8"rKizunaStoneOfsNative");
    fileExts[".wko"] = jamcrc(u8"rWeaponKindOfsNative");
    fileExts[".tex"] = jamcrc(u8"uSceneCapture::rCaptureTexture");
    fileExts[".ext"] = jamcrc(u8"cInstancingResource");
    fileExts[".cctas"] = jamcrc(u8"rCheatCheckTableAccSkillNative");
    fileExts[".ccta"] = jamcrc(u8"rCheatCheckTableArmorNative");
    fileExts[".cctb"] = jamcrc(u8"rCheatCheckTableBuddyNative");
    fileExts[".cctbf"] = jamcrc(u8"rCheatCheckTableBuddyFlagNative");
    fileExts[".cctg"] = jamcrc(u8"rCheatCheckTableGeneNative");
    fileExts[".cctna"] = jamcrc(u8"rCheatCheckTableNaviAccNative");
    fileExts[".cctr"] = jamcrc(u8"rCheatCheckTableRangeNative");
    fileExts[".ccthm"] = jamcrc(u8"rCheatCheckTableWeaponHamNative");
    fileExts[".ccthu"] = jamcrc(u8"rCheatCheckTableWeaponHueNative");
    fileExts[".cctwo"] = jamcrc(u8"rCheatCheckTableWeaponOneNative");
    fileExts[".cctwt"] = jamcrc(u8"rCheatCheckTableWeaponTwoNative");
    fileExts[".badt"] = jamcrc(u8"rBattleArenaDLCTableNative");
    fileExts[".batt"] = jamcrc(u8"rBattleArenaTrialTableNative");
    fileExts[".bte"] = jamcrc(u8"rBattleNaviTextEventNative");
    fileExts[".bseff"] = jamcrc(u8"rBattleStatusEffectNative");
    fileExts[".bvspp"] = jamcrc(u8"rBattleVsPorchPresetNative");
    fileExts[".ditemp"] = jamcrc(u8"rDLCItemTableNative");
    fileExts[".dtnmt"] = jamcrc(u8"rDLCRegionTnmntTableNative");
    fileExts[".dsuqd"] = jamcrc(u8"rDLCSubQuestDataNative");
    fileExts[".dvsrule"] = jamcrc(u8"rDLCVsRuleTableNative");
    fileExts[".ecpd"] = jamcrc(u8"rEnemyCameraParamNative");
    fileExts[".lshpd"] = jamcrc(u8"rLimitedShopDataNative");
    fileExts[".lshppd"] = jamcrc(u8"rLimitedShopPlaceDataNative");
    fileExts[".lpd"] = jamcrc(u8"rLinkPrizeDataNative");
    fileExts[".mcr"] = jamcrc(u8"rMedalCompRewardNative");
    fileExts[".mectd"] = jamcrc(u8"rMonsterEnumConversionTableNative");
    fileExts[".nad"] = jamcrc(u8"rNavirouAccessoryDataNative");
    fileExts[".nstera"] = jamcrc(u8"rNestEggReviewANative");
    fileExts[".nsterb"] = jamcrc(u8"rNestEggReviewBNative");
    fileExts[".nstmsg"] = jamcrc(u8"rNestMessageNative");
    fileExts[".ocpd"] = jamcrc(u8"rOtomonCameraParamNative");
    fileExts[".pmrd"] = jamcrc(u8"rPostmanRewardDataNative");
    fileExts[".srcd"] = jamcrc(u8"rStaffRollCutDataNative");
    fileExts[".wmmd"] = jamcrc(u8"rWorldMapMaskDataNative");
    fileExts[".tdvs"] = jamcrc(u8"rTalkDemoViewSpriteDataNative");
    fileExts[".arp"] = jamcrc(u8"rArmorParamNative");
    fileExts[".dlc"] = jamcrc(u8"rDLCTableNative");
    fileExts[".mdl"] = jamcrc(u8"rMedalDataListNative");
    fileExts[".mbcd"] = jamcrc(u8"rMyhouseBoxCameraDataNative");
    fileExts[".stb"] = jamcrc(u8"rStoryTalkBalloonNative");
    fileExts[".wpp"] = jamcrc(u8"rWeaponParamNative");
    fileExts[".bef"] = jamcrc(u8"rBattleEnemyFileNative");
    fileExts[".cndp"] = jamcrc(u8"rConditionPriorityDataNative");
    fileExts[".ghlt"] = jamcrc(u8"rGatherLevelTableNative");
    fileExts[".lsnl"] = jamcrc(u8"rLimitedShopNpcList");
    fileExts[".mbd"] = jamcrc(u8"rMonsterBookDataNative");
    fileExts[".tpp"] = jamcrc(u8"rPresetParamNative");
    fileExts[".tppe"] = jamcrc(u8"rPresetParamEquipNative");
    fileExts[".tppi"] = jamcrc(u8"rPresetParamItemNative");
    fileExts[".tppp"] = jamcrc(u8"rPresetParamPlayerNative");
    fileExts[".skf"] = jamcrc(u8"rSkillFlagNative");
    fileExts[".dat"] = jamcrc(u8"rAppMovie");
    fileExts[".wmv"] = jamcrc(u8"rAppMovieIntermediate");
    fileExts[".cps"] = jamcrc(u8"rCardPose");
    fileExts[".rdp"] = jamcrc(u8"rRideParamNative");
    fileExts[".scl"] = jamcrc(u8"rSequenceCameraList");
    fileExts[".rnmd"] = jamcrc(u8"rResourceNameForDevNative");
    fileExts[".cfid"] = jamcrc(u8"rChestItemTableDataNative");
    fileExts[".gstd"] = jamcrc(u8"rGatherSetTableDataNative");
    fileExts[".fppar"] = jamcrc(u8"rFldPlParam_ARNative");
    fileExts[".fppgr"] = jamcrc(u8"rFldPlParam_GRNative");
    fileExts[".fppnr"] = jamcrc(u8"rFldPlParam_NRNative");
    fileExts[".fppwr"] = jamcrc(u8"rFldPlParam_WRNative");
    fileExts[".acd"] = jamcrc(u8"rAccessoryDataNative");
    fileExts[".acr"] = jamcrc(u8"rAccessoryRareNative");
    fileExts[".acs"] = jamcrc(u8"rAccessorySkillNative");
    fileExts[".ard"] = jamcrc(u8"rArmorDataNative");
    fileExts[".bat"] = jamcrc(u8"rBattleArenaTableNative");
    fileExts[".bcmr"] = jamcrc(u8"rBattleCommonResourceNative");
    fileExts[".bes"] = jamcrc(u8"rBattleEnemySetNative");
    fileExts[".bemt"] = jamcrc(u8"rBattleEnemyTblNative");
    fileExts[".bemtp"] = jamcrc(u8"rBattleEnemyTblPlanNative");
    fileExts[".bnt"] = jamcrc(u8"rBattleNpcTblNative");
    fileExts[".bplt"] = jamcrc(u8"rBattlePlayerTblNative");
    fileExts[".brsb"] = jamcrc(u8"rBattleResultBonusNative");
    fileExts[".bstr"] = jamcrc(u8"rBattleStageResourceNative");
    fileExts[".bwpt"] = jamcrc(u8"rBattleWeaponTblNative");
    fileExts[".bfd"] = jamcrc(u8"rBroilerFlavorDataNative");
    fileExts[".bdypa"] = jamcrc(u8"rBuddyPathDataNative");
    fileExts[".bdypl"] = jamcrc(u8"rBuddyPlanDataNative");
    fileExts[".sce"] = jamcrc(u8"rCallingEncountDataNative");
    fileExts[".cnd"] = jamcrc(u8"rConditionNameDataNative");
    fileExts[".dmd"] = jamcrc(u8"rDemoDataNative");
    fileExts[".dfd"] = jamcrc(u8"rDemoFlagDataNative");
    fileExts[".ebc"] = jamcrc(u8"rEggBaseColorDataNative");
    fileExts[".eepd"] = jamcrc(u8"rEncntEnemyPartyNative");
    fileExts[".eshd"] = jamcrc(u8"rEquiprShopDataNative");
    fileExts[".fasa"] = jamcrc(u8"rFieldAISetActNative");
    fileExts[".fask"] = jamcrc(u8"rFieldAISetKindNative");
    fileExts[".fedpa"] = jamcrc(u8"rFieldEnemyPathDataNative");
    fileExts[".fedpl"] = jamcrc(u8"rFieldEnemyPlanDataNative");
    fileExts[".fhd"] = jamcrc(u8"rFieldHuntingDataNative");
    fileExts[".fmpd"] = jamcrc(u8"rFieldMotionPackageDataNative");
    fileExts[".fnmd"] = jamcrc(u8"rFieldNpcMotionNative");
    fileExts[".fpm"] = jamcrc(u8"rFieldPlayerMotionDataNative");
    fileExts[".fsfd"] = jamcrc(u8"rFieldSetFlagDataNative");
    fileExts[".fofd"] = jamcrc(u8"rFurattoFieldDataNative");
    fileExts[".fotd"] = jamcrc(u8"rFurattoTrendDataNative");
    fileExts[".gfd"] = jamcrc(u8"rGalleryFlagDataNative");
    fileExts[".gcd"] = jamcrc(u8"rGatherCommentDataNative");
    fileExts[".ged"] = jamcrc(u8"rGeneEditNative");
    fileExts[".glt"] = jamcrc(u8"rGeneLottingNative");
    fileExts[".gcd"] = jamcrc(u8"rGeneralCountDataNative");
    fileExts[".gfd"] = jamcrc(u8"rGeneralFlagDataNative");
    fileExts[".gtb"] = jamcrc(u8"rGeneTableNative");
    fileExts[".itm"] = jamcrc(u8"rItemDataNative");
    fileExts[".mix"] = jamcrc(u8"rItemMixNative");
    fileExts[".mqsd"] = jamcrc(u8"rMainQuestDataNative");
    fileExts[".mmk"] = jamcrc(u8"rMapMarkerNative");
    fileExts[".mkr"] = jamcrc(u8"rMarkerDataNative");
    fileExts[".matd"] = jamcrc(u8"rMaterialDataNative");
    fileExts[".asd"] = jamcrc(u8"rMergeStreamDataNative");
    fileExts[".mxf"] = jamcrc(u8"rMixFlagNative");
    fileExts[".mrt"] = jamcrc(u8"rMonsterRankTableNative");
    fileExts[".nsd"] = jamcrc(u8"rNekoTaxiStationDataNative");
    fileExts[".nhap"] = jamcrc(u8"rNestHappeningNative");
    fileExts[".nhapp"] = jamcrc(u8"rNestHappeningProbNative");
    fileExts[".nasl"] = jamcrc(u8"rNpcAirouSetResourceLogDataNative");
    fileExts[".npsl"] = jamcrc(u8"rNpcSetResourceLogDataNative");
    fileExts[".rcd"] = jamcrc(u8"rReactionCommentDataNative");
    fileExts[".rnd"] = jamcrc(u8"rRiderNoteDataNative");
    fileExts[".rnld"] = jamcrc(u8"rRiderNoteLargeCategoryDataNative");
    fileExts[".rnpd"] = jamcrc(u8"rRiderNotePageDataNative");
    fileExts[".rnsd"] = jamcrc(u8"rRiderNoteSmallCategoryDataNative");
    fileExts[".rntd"] = jamcrc(u8"rRiderNoteThumbnailDataNative");
    fileExts[".sdm"] = jamcrc(u8"rShortDemoDataNative");
    fileExts[".skt"] = jamcrc(u8"rSkillTableNative");
    fileExts[".schd"] = jamcrc(u8"rStChapDataNative");
    fileExts[".sed"] = jamcrc(u8"rStEpiDataNative");
    fileExts[".scod"] = jamcrc(u8"rStoryCountDataNative");
    fileExts[".std"] = jamcrc(u8"rStoryDataNative");
    fileExts[".stfd"] = jamcrc(u8"rStoryFlagDataNative");
    fileExts[".spcd"] = jamcrc(u8"rStPrComDataNative");
    fileExts[".sqcd"] = jamcrc(u8"rSubQuestCountDataNative");
    fileExts[".sqfd"] = jamcrc(u8"rSubQuestFlagDataNative");
    fileExts[".ssed"] = jamcrc(u8"rSubStEpiDataNative");
    fileExts[".sycd"] = jamcrc(u8"rSystemCountDataNative");
    fileExts[".tdmact"] = jamcrc(u8"rTalkDemoActorDataNative");
    fileExts[".tdmcmd"] = jamcrc(u8"rTalkDemoCommandDataNative");
    fileExts[".tdmd"] = jamcrc(u8"rTalkDemoDataNative");
    fileExts[".tdmeff"] = jamcrc(u8"rTalkDemoEffectDataNative");
    fileExts[".tdmfc"] = jamcrc(u8"rTalkDemoFaceDataNative");
    fileExts[".tdmmot"] = jamcrc(u8"rTalkDemoMotionDataNative");
    fileExts[".tdmpos"] = jamcrc(u8"rTalkDemoPoseDataNative");
    fileExts[".tdms"] = jamcrc(u8"rTalkDemoScript");
    fileExts[".tid"] = jamcrc(u8"rTalkInfoDataNative");
    fileExts[".tmd"] = jamcrc(u8"rTalkMsgDataNative");
    fileExts[".tstd"] = jamcrc(u8"rTalkSelectDataNative");
    fileExts[".wpd"] = jamcrc(u8"rWeaponDataNative");
    fileExts[".fgd"] = jamcrc(u8"rFieldGateDataNative");
    fileExts[".fslm"] = jamcrc(u8"rMHFSMList");
    fileExts[".wpdt"] = jamcrc(u8"rWipeData");
    fileExts[".btat"] = jamcrc(u8"rBattleAtkNative");
    fileExts[".fbd"] = jamcrc(u8"rFieldBuddyMotionDataNative");
    fileExts[".fld"] = jamcrc(u8"rFieldDataNative");
    fileExts[".fesd"] = jamcrc(u8"rFieldEnemySetDataNative");
    fileExts[".fisd"] = jamcrc(u8"rFieldIngredientSetDataNative");
    fileExts[".fmd"] = jamcrc(u8"rFieldMotionDataNative");
    fileExts[".fosd"] = jamcrc(u8"rFieldOrnamentSetDataNative");
    fileExts[".fprd"] = jamcrc(u8"rFieldPredatorDataNative");
    fileExts[".fssd"] = jamcrc(u8"rFieldSchedulerSetDataNative");
    fileExts[".mrd"] = jamcrc(u8"rMonsterRaceDataNative");
    fileExts[".ntk"] = jamcrc(u8"rNpcTalkNative");
    fileExts[".shp"] = jamcrc(u8"rShopDataNative");
    fileExts[".sfd"] = jamcrc(u8"rSystemFlagDataNative");
    fileExts[".tlk"] = jamcrc(u8"rTalkDataNative");
    fileExts[".pec"] = jamcrc(u8"rProofEffectColorControl");
    fileExts[".pel"] = jamcrc(u8"rProofEffectList");
    fileExts[".psl"] = jamcrc(u8"rProofEffectMotSequenceList");
    fileExts[".pep"] = jamcrc(u8"rProofEffectParamScript");
    fileExts[".cmdt"] = jamcrc(u8"rCameraData");
    fileExts[".clc"] = jamcrc(u8"rColorLinkColor");
    fileExts[".cli"] = jamcrc(u8"rColorLinkInfo");
    fileExts[".ccinfo"] = jamcrc(u8"rConditionChangeInfo");
    fileExts[".dpd"] = jamcrc(u8"rDollPartsDisp");
    fileExts[".gar"] = jamcrc(u8"rGroundAdjustment");
    fileExts[".mea"] = jamcrc(u8"rModelEasyAnime");
    fileExts[".mip"] = jamcrc(u8"rModelInPath");
    fileExts[".mpd"] = jamcrc(u8"rMonsterPartsDisp");
    fileExts[".npd"] = jamcrc(u8"rNavirouPartsDisp");
    fileExts[".pvi"] = jamcrc(u8"rPartsVisibleInfo");
    fileExts[".spll"] = jamcrc(u8"rSchedulerPreLoadList");
    fileExts[".swp"] = jamcrc(u8"rShadowParamNative");
    fileExts[".vjr"] = jamcrc(u8"rVirtualJoint");
    fileExts[".wgi"] = jamcrc(u8"rWeaponGimmickInfo");
    fileExts[".wofb"] = jamcrc(u8"rWeaponOfsForBodyNative");
    fileExts[".ext"] = jamcrc(u8"cResource");
    fileExts[".mod"] = jamcrc(u8"rModel");
    fileExts[".lmt"] = jamcrc(u8"rMotionList");
    fileExts[".tex"] = jamcrc(u8"rTexture");
    fileExts[".sbc"] = jamcrc(u8"rCollision");
    fileExts[".gway"] = jamcrc(u8"rAIWayPointGraph");
    fileExts[".sdl"] = jamcrc(u8"rScheduler");
    fileExts[".arc"] = jamcrc(u8"rArchive");
    fileExts[".ctc"] = jamcrc(u8"rCnsTinyChain");
    fileExts[".chn"] = jamcrc(u8"rChain");
    fileExts[".ccl"] = jamcrc(u8"rChainCol");
    fileExts[".fsm"] = jamcrc(u8"rAIFSM");
    fileExts[".fsl"] = jamcrc(u8"rAIFSMList");
    fileExts[".cdt"] = jamcrc(u8"rAIConditionTree");
    fileExts[".lcm"] = jamcrc(u8"rCameraList");
    fileExts[".gui"] = jamcrc(u8"rGUI");
    fileExts[".rtex"] = jamcrc(u8"rRenderTargetTexture");
    fileExts[".e2d"] = jamcrc(u8"rEffect2D");
    fileExts[".gfd"] = jamcrc(u8"rGUIFont");
    fileExts[".gii"] = jamcrc(u8"rGUIIconInfo");
    fileExts[".gst"] = jamcrc(u8"rGUIStyle");
    fileExts[".gmd"] = jamcrc(u8"rGUIMessage");
    fileExts[".dwm"] = jamcrc(u8"rDeformWeightMap");
    fileExts[".swm"] = jamcrc(u8"rSwingModel");
    fileExts[".vib"] = jamcrc(u8"rVibration");
    fileExts[".srqr"] = jamcrc(u8"rSoundRequest");
    fileExts[".stqr"] = jamcrc(u8"rSoundStreamRequest");
    fileExts[".scsr"] = jamcrc(u8"rSoundCurveSet");
    fileExts[".sdsr"] = jamcrc(u8"rSoundDirectionalSet");
    fileExts[".equr"] = jamcrc(u8"rSoundEQ");
    fileExts[".revr"] = jamcrc(u8"rSoundReverb");
    fileExts[".scvr.xml"] = jamcrc(u8"rSoundCurveXml");
    fileExts[".sdcr.xml"] = jamcrc(u8"rSoundDirectionalCurveXml");
    fileExts[".sbkr"] = jamcrc(u8"rSoundBank");
    fileExts[".sprr"] = jamcrc(u8"rSoundPhysicsRigidBody");
    fileExts[".spsr"] = jamcrc(u8"rSoundPhysicsSoftBody");
    fileExts[".spjr"] = jamcrc(u8"rSoundPhysicsJoint");
    fileExts[".mfx"] = jamcrc(u8"rShader2");
    fileExts[".is"] = jamcrc(u8"rImplicitSurface");
    fileExts[".ext"] = jamcrc(u8"rMovie");
    fileExts[".mem.wmv"] = jamcrc(u8"rMovieOnMemory");
    fileExts[".wmvd"] = jamcrc(u8"rMovieOnDisk");
    fileExts[".mem.wmv"] = jamcrc(u8"rMovieOnMemoryInterMediate");
    fileExts[".wmvd"] = jamcrc(u8"rMovieOnDiskInterMediate");
    fileExts[".stex"] = jamcrc(u8"rSceneTexture");
    fileExts[".gr2"] = jamcrc(u8"rGrass2");
    fileExts[".gr2s"] = jamcrc(u8"rGrass2Setting");
    fileExts[".occ"] = jamcrc(u8"rOccluder");
    fileExts[".isc"] = jamcrc(u8"rISC");
    fileExts[".sky"] = jamcrc(u8"rSky");
    fileExts[".stc"] = jamcrc(u8"rStarCatalog");
    fileExts[".cld"] = jamcrc(u8"rCloud");
    fileExts[".ext"] = jamcrc(u8"rSoundSourcePC");
    fileExts[".xsew"] = jamcrc(u8"rSoundSourceMSADPCM");
    fileExts[".sngw"] = jamcrc(u8"rSoundSourceOggVorbis");
    fileExts[".efl"] = jamcrc(u8"rEffectList");
    fileExts[".sbch"] = jamcrc(u8"rCollisionHeightField");
    fileExts[".ik"] = jamcrc(u8"rCnsIK");
    fileExts[".spkg"] = jamcrc(u8"rShaderPackage");
    fileExts[".sch"] = jamcrc(u8"rShaderCache");
    fileExts[".mrl"] = jamcrc(u8"rMaterial");
    fileExts[".sssr.xml"] = jamcrc(u8"rSoundSpeakerSetXml");
    fileExts[".obc"] = jamcrc(u8"rCollisionObj");
    fileExts[".grs"] = jamcrc(u8"rGrass");
    fileExts[".ext"] = jamcrc(u8"rConstraint");
    fileExts[".lat"] = jamcrc(u8"rCnsLookAt");
    fileExts[".ean"] = jamcrc(u8"rEffectAnim");
    fileExts[".efs"] = jamcrc(u8"rEffectStrip");
    fileExts[".vts"] = jamcrc(u8"rVertices");
    fileExts[".nls"] = jamcrc(u8"rNulls");
    fileExts[".ais"] = jamcrc(u8"rAI");
    fileExts[".splr"] = jamcrc(u8"rSoundPhysicsList");
    fileExts[".fca"] = jamcrc(u8"rFacialAnimation");
    fileExts[".mst"] = jamcrc(u8"rMetaSet");
    fileExts[".mst.xml"] = jamcrc(u8"rMetaSetXml");
    fileExts[".tik"] = jamcrc(u8"rCnsTinyIK");
    fileExts[".scl"] = jamcrc(u8"rCnsScaleNormalize");
    fileExts[".lim"] = jamcrc(u8"rCnsRotateLimit");
    fileExts[".mtx"] = jamcrc(u8"rCnsMatrix");
    fileExts[".jof"] = jamcrc(u8"rCnsJointOffset");
    fileExts[".par"] = jamcrc(u8"rCnsParent");
    fileExts[".pan"] = jamcrc(u8"rCnsParentN");
    fileExts[".eye"] = jamcrc(u8"rCnsLookAtEyeball");
    fileExts[".gpt"] = jamcrc(u8"rGraphPatch");
    fileExts[".grw"] = jamcrc(u8"rGrassWind");
    fileExts[".hul"] = jamcrc(u8"rConvexHull");
    fileExts[".geo2"] = jamcrc(u8"rGeometry2");
    fileExts[".geo3"] = jamcrc(u8"rGeometry3");
    fileExts[".srt"] = jamcrc(u8"rSerial");
    fileExts[".dsc"] = jamcrc(u8"rDynamicSbc");
    fileExts[".geog"] = jamcrc(u8"rGeometry2Group");

    fileExtsReversed[jamcrc(u8"rBattleBinary")] = ".btb";
    fileExtsReversed[jamcrc(u8"rBattleCutCmdData")] = ".bccmd";
    fileExtsReversed[jamcrc(u8"rBattleSelectSetData")] = ".bsset";
    fileExtsReversed[jamcrc(u8"rAgingFieldPatrolDataNative")] = ".afpd";
    fileExtsReversed[jamcrc(u8"rTalkDemoCut")] = ".cut";
    fileExtsReversed[jamcrc(u8"rTalkDemoSound")] = ".tsnd";
    fileExtsReversed[jamcrc(u8"rTalkDemoWorkOriginInfo")] = ".work";
    fileExtsReversed[jamcrc(u8"rTalkDemoObjInitPos")] = ".pos";
    fileExtsReversed[jamcrc(u8"rFieldEnemyDefaultAifsmDataNaitive")] = ".fedad";
    fileExtsReversed[jamcrc(u8"rFieldConnectionInfoNative")] = ".fci";
    fileExtsReversed[jamcrc(u8"rFieldPartsInfoNative")] = ".fpi";
    fileExtsReversed[jamcrc(u8"rFieldPartsLayoutNative")] = ".fpl";
    fileExtsReversed[jamcrc(u8"rTraceSonarNative")] = ".ts";
    fileExtsReversed[jamcrc(u8"rFieldPlacementObjectSetNative")] = ".fpos";
    fileExtsReversed[jamcrc(u8"rFieldCamOption")] = ".fco";
    fileExtsReversed[jamcrc(u8"rDungeonInfoListNative")] = ".dai";
    fileExtsReversed[jamcrc(u8"rFieldNpcNekoTaxiList")] = ".fntl";
    fileExtsReversed[jamcrc(u8"rFieldObjectList")] = ".fol";
    fileExtsReversed[jamcrc(u8"rFieldCamera")] = ".fcr";
    fileExtsReversed[jamcrc(u8"rOccluder2Native")] = ".occ2";
    fileExtsReversed[jamcrc(u8"rInstanceDrawDistance")] = ".idd";
    fileExtsReversed[jamcrc(u8"rIDColor")] = ".idcol";
    fileExtsReversed[jamcrc(u8"rInstancePlacement")] = ".ipr";
    fileExtsReversed[jamcrc(u8"rPlayerMoveConfigData")] = ".pmc";
    fileExtsReversed[jamcrc(u8"rSoundGuiSe")] = ".sgs";
    fileExtsReversed[jamcrc(u8"rSoundParamOffsetControl")] = ".spoc";
    fileExtsReversed[jamcrc(u8"rSoundPelTiedSe")] = ".pts";
    fileExtsReversed[jamcrc(u8"rSoundAreaReverb")] = ".sar";
    fileExtsReversed[jamcrc(u8"rSoundSystemSetting")] = ".sss";
    fileExtsReversed[jamcrc(u8"rSoundPronounceList")] = ".sptl";
    fileExtsReversed[jamcrc(u8"rEnaJoinProgressDataNative")] = ".ejpd";
    fileExtsReversed[jamcrc(u8"rKizunaLvProgressDataNative")] = ".klpd";
    fileExtsReversed[jamcrc(u8"rReusJoinProgressDataNative")] = ".rjpd";
    fileExtsReversed[jamcrc(u8"rFieldDirectionInfoNative")] = ".fdi";
    fileExtsReversed[jamcrc(u8"rAgingBtlBuddyTableNative")] = ".abbt";
    fileExtsReversed[jamcrc(u8"rAgingBtlEnemySetTableNative")] = ".abest";
    fileExtsReversed[jamcrc(u8"rAgingBtlStageTableNative")] = ".abst";
    fileExtsReversed[jamcrc(u8"rAgingCheckBuddyNative")] = ".acb";
    fileExtsReversed[jamcrc(u8"rAgingCheckEnaLayArmorNative")] = ".acela";
    fileExtsReversed[jamcrc(u8"rAgingCheckNaviAccesoryNative")] = ".acna";
    fileExtsReversed[jamcrc(u8"rAgingCheckPlArmorNative")] = ".acpa";
    fileExtsReversed[jamcrc(u8"rAgingCheckWeaponNative")] = ".acwp";
    fileExtsReversed[jamcrc(u8"rAgingFieldTableNative")] = ".aft";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableItemBattleNative")] = ".cctib";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableWeaponBowNative")] = ".cctbw";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableWeaponGunNative")] = ".cctgn";
    fileExtsReversed[jamcrc(u8"rDoubleKizunaCameraOffsetNative")] = ".bdkc";
    fileExtsReversed[jamcrc(u8"rDoubleKizunaMonsterConditionNative")] = ".bdkmc";
    fileExtsReversed[jamcrc(u8"rDoubleKizunaMonsterOffsetNative")] = ".bdkm";
    fileExtsReversed[jamcrc(u8"rDoubleKizunaSchedulerPathNative")] = ".bdkd";
    fileExtsReversed[jamcrc(u8"rActionCommandDelayTimeDataNative")] = ".acdd";
    fileExtsReversed[jamcrc(u8"rAnimationSecondParamNative")] = ".asp";
    fileExtsReversed[jamcrc(u8"rGuiClearedDungeonItemParamNative")] = ".cdi";
    fileExtsReversed[jamcrc(u8"rGuiColorDataNative")] = ".gcol";
    fileExtsReversed[jamcrc(u8"rGuiFadeDataNative")] = ".gfad";
    fileExtsReversed[jamcrc(u8"rGuiHatchBabyParamNative")] = ".ghbp";
    fileExtsReversed[jamcrc(u8"rGuiModelDrawCameraParamNative")] = ".gmdc";
    fileExtsReversed[jamcrc(u8"rGuiModelDrawWindowParamNative")] = ".gmdw";
    fileExtsReversed[jamcrc(u8"rGuiMonsterModelParamNative")] = ".gmmp";
    fileExtsReversed[jamcrc(u8"rGuiMultiVsPlayerParamNative")] = ".gmvp";
    fileExtsReversed[jamcrc(u8"rGuiNpcModelParamNative")] = ".gnpc";
    fileExtsReversed[jamcrc(u8"rGuiParamNative")] = ".gpm";
    fileExtsReversed[jamcrc(u8"rGuiRiderCardBuddyParamNative")] = ".grcb";
    fileExtsReversed[jamcrc(u8"rGuiStatusPlayerParamNative")] = ".gspp";
    fileExtsReversed[jamcrc(u8"rGuiTraditionBuddyParamNative")] = ".gtbp";
    fileExtsReversed[jamcrc(u8"rGuiWeaponModelParamNative")] = ".gwmp";
    fileExtsReversed[jamcrc(u8"rAchievementIconNative")] = ".aic";
    fileExtsReversed[jamcrc(u8"rCommandIconNative")] = ".cic";
    fileExtsReversed[jamcrc(u8"rIconStatusDataNative")] = ".isd";
    fileExtsReversed[jamcrc(u8"rItemIconNative")] = ".iic";
    fileExtsReversed[jamcrc(u8"rMonsterIconNative")] = ".mic";
    fileExtsReversed[jamcrc(u8"rSkillIconNative")] = ".sic";
    fileExtsReversed[jamcrc(u8"rDramaMessageDataNative")] = ".drmd";
    fileExtsReversed[jamcrc(u8"rFieldCommonMessageDataNative")] = ".fcmd";
    fileExtsReversed[jamcrc(u8"rGameMessageDataNative")] = ".grmd";
    fileExtsReversed[jamcrc(u8"rNpcMessageDataNative")] = ".ntlkd";
    fileExtsReversed[jamcrc(u8"rTalkMessageDataNative")] = ".tlkd";
    fileExtsReversed[jamcrc(u8"rOptionKeyConfigButtonDataNative")] = ".okbd";
    fileExtsReversed[jamcrc(u8"rOptionKeyConfigDataNative")] = ".okd";
    fileExtsReversed[jamcrc(u8"rOptionKeyConfigKeyboardDataNative")] = ".okkd";
    fileExtsReversed[jamcrc(u8"rOptionLanguageDataNative")] = ".lad";
    fileExtsReversed[jamcrc(u8"rOptionParamDataNative")] = ".opd";
    fileExtsReversed[jamcrc(u8"rOptionSettingDataNative")] = ".osd";
    fileExtsReversed[jamcrc(u8"rAmiiboGiftNative")] = ".agt";
    fileExtsReversed[jamcrc(u8"rBattleBuddyConditionDataNative")] = ".bbcnd";
    fileExtsReversed[jamcrc(u8"rBattleCmdCameraDataNative")] = ".bccam";
    fileExtsReversed[jamcrc(u8"rBattleCmdIgnoreEnemyDataNative")] = ".bcige";
    fileExtsReversed[jamcrc(u8"rBattleEffHitInfoDataNative")] = ".behi";
    fileExtsReversed[jamcrc(u8"rBattleEnemyMCTblNative")] = ".bemct";
    fileExtsReversed[jamcrc(u8"rBattleEventResourceDataNative")] = ".bert";
    fileExtsReversed[jamcrc(u8"rBattleEventResultDataNative")] = ".berd";
    fileExtsReversed[jamcrc(u8"rBattleEventTblNative")] = ".bet";
    fileExtsReversed[jamcrc(u8"rBattleMorphChangeDataNative")] = ".bmcd";
    fileExtsReversed[jamcrc(u8"rBattleMorphConditionDataNative")] = ".bmcnd";
    fileExtsReversed[jamcrc(u8"rBattleNavirouFsmTableNative")] = ".bnft";
    fileExtsReversed[jamcrc(u8"rBattleNavirouMessageNative")] = ".bnmt";
    fileExtsReversed[jamcrc(u8"rBattleNavirouSetTableNative")] = ".bnst";
    fileExtsReversed[jamcrc(u8"rBattleNavirouUniqueNative")] = ".bnut";
    fileExtsReversed[jamcrc(u8"rBattlePartsConditionDataNative")] = ".bptcnd";
    fileExtsReversed[jamcrc(u8"rBCATAppDataNative")] = ".bcatData";
    fileExtsReversed[jamcrc(u8"rBingoBonusCategoryNative")] = ".bbc";
    fileExtsReversed[jamcrc(u8"rBreakFieldObjectDataNative")] = ".bfofd";
    fileExtsReversed[jamcrc(u8"rBuddyBtlMCDataNative")] = ".bdbcm";
    fileExtsReversed[jamcrc(u8"rCharaCustomLogDataNative")] = ".chcl";
    fileExtsReversed[jamcrc(u8"rCharaRemakeTicketDataNative")] = ".crd";
    fileExtsReversed[jamcrc(u8"rDemoGalleryDataNative")] = ".dgd";
    fileExtsReversed[jamcrc(u8"rDifficultyConvertCountNative")] = ".dcc";
    fileExtsReversed[jamcrc(u8"rDifficultyConvertGameFlagNative")] = ".dcgf";
    fileExtsReversed[jamcrc(u8"rDLCAppDataNative")] = ".dlcData";
    fileExtsReversed[jamcrc(u8"rDLCViewDataNative")] = ".dlcView";
    fileExtsReversed[jamcrc(u8"rDungeonChestLotTableNative")] = ".dclt";
    fileExtsReversed[jamcrc(u8"rDungeonContainsDataNative")] = ".dcd";
    fileExtsReversed[jamcrc(u8"rDungeonCreatePatternNative")] = ".dcp";
    fileExtsReversed[jamcrc(u8"rDungeonEggMonsterDataNative")] = ".demd";
    fileExtsReversed[jamcrc(u8"rDungeonEnemyFixedDataNative")] = ".defd";
    fileExtsReversed[jamcrc(u8"rDungeonEnemyHomingDataNative")] = ".deh";
    fileExtsReversed[jamcrc(u8"rDungeonEnemyLocatorDataNative")] = ".deloc";
    fileExtsReversed[jamcrc(u8"rDungeonEnemyLotDataNative")] = ".deld";
    fileExtsReversed[jamcrc(u8"rDungeonNestRarenessDataNative")] = ".dnrd";
    fileExtsReversed[jamcrc(u8"rEggUniquePatternDataNative")] = ".eup";
    fileExtsReversed[jamcrc(u8"rEnvCreatureDataNative")] = ".ecr";
    fileExtsReversed[jamcrc(u8"rExpeditionFieldDataNative")] = ".exfd";
    fileExtsReversed[jamcrc(u8"rExpeditionPolicyDataNative")] = ".expl";
    fileExtsReversed[jamcrc(u8"rExpeditionSlotNumDataNative")] = ".esd";
    fileExtsReversed[jamcrc(u8"rFieldAmbientDataNative")] = ".fldamb";
    fileExtsReversed[jamcrc(u8"rFieldPartsDataNative")] = ".fpd";
    fileExtsReversed[jamcrc(u8"rFieldPartsNameDataNative")] = ".fldpn";
    fileExtsReversed[jamcrc(u8"rFieldSkyDataNative")] = ".fldsky";
    fileExtsReversed[jamcrc(u8"rFieldSpotDataNative")] = ".flds";
    fileExtsReversed[jamcrc(u8"rFixedDungeonConfigDataNative")] = ".fdcd";
    fileExtsReversed[jamcrc(u8"rFortuneGiftNative")] = ".fgt";
    fileExtsReversed[jamcrc(u8"rGeneRandomSetNative")] = ".grset";
    fileExtsReversed[jamcrc(u8"rGiftBuddyTableNative")] = ".tgb";
    fileExtsReversed[jamcrc(u8"rGiftEggTableNative")] = ".tge";
    fileExtsReversed[jamcrc(u8"rGuiFontDataNative")] = ".fnd";
    fileExtsReversed[jamcrc(u8"rGuiFontLanguageDataNative")] = ".gfld";
    fileExtsReversed[jamcrc(u8"rGuiLocalizeTextureDataNative")] = ".ltd";
    fileExtsReversed[jamcrc(u8"rGuiMessageDataNative")] = ".msgm";
    fileExtsReversed[jamcrc(u8"rGuiWorldMapNative")] = ".gwm";
    fileExtsReversed[jamcrc(u8"rHabitatDataNative")] = ".hbt";
    fileExtsReversed[jamcrc(u8"rHardDungeonUIDataNative")] = ".hdu";
    fileExtsReversed[jamcrc(u8"rHatchEggBonusDataNative")] = ".heb";
    fileExtsReversed[jamcrc(u8"rEditCameraDataNative")] = ".ecd";
    fileExtsReversed[jamcrc(u8"rEditColorPresetDataNative")] = ".ecp";
    fileExtsReversed[jamcrc(u8"rEditEyeShapeDataNative")] = ".eed";
    fileExtsReversed[jamcrc(u8"rEditFaceShapeDataNative")] = ".efd";
    fileExtsReversed[jamcrc(u8"rEditHairstyleDataNative")] = ".ehd";
    fileExtsReversed[jamcrc(u8"rEditMakeupTypeDataNative")] = ".emad";
    fileExtsReversed[jamcrc(u8"rEditMouthShapeDataNative")] = ".emod";
    fileExtsReversed[jamcrc(u8"rEditParamDataNative")] = ".epd";
    fileExtsReversed[jamcrc(u8"rEditVoiceTypeDataNative")] = ".evd";
    fileExtsReversed[jamcrc(u8"rLinkedDungeonDataNative")] = ".ldd";
    fileExtsReversed[jamcrc(u8"rMelynxShopAccessoryDataNative")] = ".macd";
    fileExtsReversed[jamcrc(u8"rMelynxShopArmorDataNative")] = ".mard";
    fileExtsReversed[jamcrc(u8"rMelynxShopDataNative")] = ".msp";
    fileExtsReversed[jamcrc(u8"rMelynxShopWeaponDataNative")] = ".mwd";
    fileExtsReversed[jamcrc(u8"rMenuRiderNoteDataNative")] = ".mrnd";
    fileExtsReversed[jamcrc(u8"rModTextureNoScaleDataNative")] = ".mtnscl";
    fileExtsReversed[jamcrc(u8"rMonsterAdditionalShowTableNative")] = ".mas";
    fileExtsReversed[jamcrc(u8"rMonsterBaseInfoDataNative")] = ".mbi";
    fileExtsReversed[jamcrc(u8"rMHSoundEmitter")] = ".ses";
    fileExtsReversed[jamcrc(u8"rMHSoundSequence")] = ".mss";
    fileExtsReversed[jamcrc(u8"rSoundAttributeSe")] = ".aser";
    fileExtsReversed[jamcrc(u8"rSoundEngine")] = ".engr";
    fileExtsReversed[jamcrc(u8"rSoundEngineXml")] = ".engr.xml";
    fileExtsReversed[jamcrc(u8"rSoundEngineValue")] = ".egvr";
    fileExtsReversed[jamcrc(u8"rSoundMotionSe")] = ".mser";
    fileExtsReversed[jamcrc(u8"rSoundSequenceSe")] = ".ssqr";
    fileExtsReversed[jamcrc(u8"rSoundSimpleCurve")] = ".sscr";
    fileExtsReversed[jamcrc(u8"rSoundSubMixerXml")] = ".smxr.xml";
    fileExtsReversed[jamcrc(u8"rSoundSubMixer")] = ".smxr";
    fileExtsReversed[jamcrc(u8"uSoundSubMixer::CurrentSubMixer")] = ".smxr";
    fileExtsReversed[jamcrc(u8"rMonsterPartsTableNative")] = ".mpt";
    fileExtsReversed[jamcrc(u8"rNavirouGuideDataNative")] = ".ngt";
    fileExtsReversed[jamcrc(u8"rNpc2dFaceTexTableNative")] = ".nft";
    fileExtsReversed[jamcrc(u8"rNpcAirouSetMotionDataNative")] = ".nasmd";
    fileExtsReversed[jamcrc(u8"rNpcLayeredArmorDataNative")] = ".nlad";
    fileExtsReversed[jamcrc(u8"rNpcSetMotionDataNative")] = ".nsmd";
    fileExtsReversed[jamcrc(u8"rNpcTalkResourceDataNative")] = ".ntrp";
    fileExtsReversed[jamcrc(u8"rNpcTalkZoneNative")] = ".ntz";
    fileExtsReversed[jamcrc(u8"rPotEffectDataNative")] = ".pte";
    fileExtsReversed[jamcrc(u8"rPotLevelDataNative")] = ".ptl";
    fileExtsReversed[jamcrc(u8"rPotOfferingDataNative")] = ".pto";
    fileExtsReversed[jamcrc(u8"rPotPrayingDataNative")] = ".ptp";
    fileExtsReversed[jamcrc(u8"rPresetParamCharaCustomNative")] = ".tppcc";
    fileExtsReversed[jamcrc(u8"rPresetParamLearningSkillSetNative")] = ".tppls";
    fileExtsReversed[jamcrc(u8"rPresetParamOtomonNative")] = ".tppo";
    fileExtsReversed[jamcrc(u8"rPresetParamOtomonGeneNative")] = ".tppog";
    fileExtsReversed[jamcrc(u8"rRiderNoteDataRushNative")] = ".rndr";
    fileExtsReversed[jamcrc(u8"rRideSkillTableNative")] = ".rst";
    fileExtsReversed[jamcrc(u8"rSkillCalcNative")] = ".skc";
    fileExtsReversed[jamcrc(u8"rSkillSetDataNative")] = ".wss";
    fileExtsReversed[jamcrc(u8"rStableCapacityDataNative")] = ".scd";
    fileExtsReversed[jamcrc(u8"rStatusChangeFlagsNative")] = ".scf";
    fileExtsReversed[jamcrc(u8"rStatusDataNative")] = ".sdt";
    fileExtsReversed[jamcrc(u8"rStoryQuestDataNative")] = ".sqd";
    fileExtsReversed[jamcrc(u8"rStoryQuestDefineNative")] = ".sqdf";
    fileExtsReversed[jamcrc(u8"rSubQuestConditionDataNative")] = ".sqccd";
    fileExtsReversed[jamcrc(u8"rSubQuestDataRenewNative")] = ".suqd";
    fileExtsReversed[jamcrc(u8"rSubQuestVeilDataNative")] = ".svd";
    fileExtsReversed[jamcrc(u8"rSubstituteNpcTblNative")] = ".sntt";
    fileExtsReversed[jamcrc(u8"rSummaryDataNative")] = ".smr";
    fileExtsReversed[jamcrc(u8"rTalkDemoDefineDataNative")] = ".tdmspk";
    fileExtsReversed[jamcrc(u8"rTrialCleanNativeDataNative")] = ".tcn";
    fileExtsReversed[jamcrc(u8"rTutorialArrowDataNative")] = ".tad";
    fileExtsReversed[jamcrc(u8"rTutorialLockDataNative")] = ".tld";
    fileExtsReversed[jamcrc(u8"rVsItemSetDataNative")] = ".vsitemset";
    fileExtsReversed[jamcrc(u8"rVsPrizeDataNative")] = ".vsprize";
    fileExtsReversed[jamcrc(u8"rVsRuleDataNative")] = ".vsrule";
    fileExtsReversed[jamcrc(u8"rSoundDemoControlNative")] = ".sdc";
    fileExtsReversed[jamcrc(u8"rSoundDemoEnvControlNative")] = ".sdec";
    fileExtsReversed[jamcrc(u8"rSoundDemoSeControlNative")] = ".sdsc";
    fileExtsReversed[jamcrc(u8"rSoundGuiOperationNative")] = ".sgo";
    fileExtsReversed[jamcrc(u8"rSoundInfoSeNative")] = ".siet";
    fileExtsReversed[jamcrc(u8"rSoundInfoStreamNative")] = ".siets";
    fileExtsReversed[jamcrc(u8"rSoundArchiveDataNative")] = ".samd";
    fileExtsReversed[jamcrc(u8"rSoundArmorDataNative")] = ".sad";
    fileExtsReversed[jamcrc(u8"rSoundBattleStageDataNative")] = ".sbsd";
    fileExtsReversed[jamcrc(u8"rSoundBattleStageDefineNative")] = ".sbsdef";
    fileExtsReversed[jamcrc(u8"rSoundBgmMonsterDataNative")] = ".sbmd";
    fileExtsReversed[jamcrc(u8"rSoundFootstepDataNative")] = ".sftd";
    fileExtsReversed[jamcrc(u8"rSoundFSMCommandBgmDataNative")] = ".sfcbd";
    fileExtsReversed[jamcrc(u8"rSoundFSMCommandSeDataNative")] = ".sfcsd";
    fileExtsReversed[jamcrc(u8"rSoundMonsterDataNative")] = ".smd";
    fileExtsReversed[jamcrc(u8"rSoundMonsterEnvironmentalDataNative")] = ".smed";
    fileExtsReversed[jamcrc(u8"rSoundMonsterKizunaDataNative")] = ".smkd";
    fileExtsReversed[jamcrc(u8"rSoundNpcAirouDataNative")] = ".snad";
    fileExtsReversed[jamcrc(u8"rSoundNpcDataNative")] = ".snd";
    fileExtsReversed[jamcrc(u8"rSoundObjectDataNative")] = ".sod";
    fileExtsReversed[jamcrc(u8"rSoundSceneVolumeNative")] = ".ssv";
    fileExtsReversed[jamcrc(u8"rSoundWeaponDataNative")] = ".swd";
    fileExtsReversed[jamcrc(u8"rSoundNpcVoicePathDataNative")] = ".snvpd";
    fileExtsReversed[jamcrc(u8"rSoundPlayerVoicePathDataNative")] = ".spvpd";
    fileExtsReversed[jamcrc(u8"rUnlockMixDataNative")] = ".ulm";
    fileExtsReversed[jamcrc(u8"rUnlockProgressDataNative")] = ".ulp";
    fileExtsReversed[jamcrc(u8"rUnlockScriptDataNative")] = ".uls";
    fileExtsReversed[jamcrc(u8"rFacialPartsComboNative")] = ".fpc";
    fileExtsReversed[jamcrc(u8"rFacialPartsControl")] = ".fpctl";
    fileExtsReversed[jamcrc(u8"rObjectModelAttachGroupNative")] = ".omg";
    fileExtsReversed[jamcrc(u8"rObjectModelAttachInfoNative")] = ".omi";
    fileExtsReversed[jamcrc(u8"rObjectModelAttachSetData")] = ".omas";
    fileExtsReversed[jamcrc(u8"rMonsterLookAtParamNative")] = ".mlka";
    fileExtsReversed[jamcrc(u8"rKizunaStoneOfsNative")] = ".kofb";
    fileExtsReversed[jamcrc(u8"rWeaponKindOfsNative")] = ".wko";
    fileExtsReversed[jamcrc(u8"uSceneCapture::rCaptureTexture")] = ".tex";
    fileExtsReversed[jamcrc(u8"cInstancingResource")] = ".ext";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableAccSkillNative")] = ".cctas";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableArmorNative")] = ".ccta";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableBuddyNative")] = ".cctb";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableBuddyFlagNative")] = ".cctbf";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableGeneNative")] = ".cctg";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableNaviAccNative")] = ".cctna";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableRangeNative")] = ".cctr";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableWeaponHamNative")] = ".ccthm";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableWeaponHueNative")] = ".ccthu";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableWeaponOneNative")] = ".cctwo";
    fileExtsReversed[jamcrc(u8"rCheatCheckTableWeaponTwoNative")] = ".cctwt";
    fileExtsReversed[jamcrc(u8"rBattleArenaDLCTableNative")] = ".badt";
    fileExtsReversed[jamcrc(u8"rBattleArenaTrialTableNative")] = ".batt";
    fileExtsReversed[jamcrc(u8"rBattleNaviTextEventNative")] = ".bte";
    fileExtsReversed[jamcrc(u8"rBattleStatusEffectNative")] = ".bseff";
    fileExtsReversed[jamcrc(u8"rBattleVsPorchPresetNative")] = ".bvspp";
    fileExtsReversed[jamcrc(u8"rDLCItemTableNative")] = ".ditemp";
    fileExtsReversed[jamcrc(u8"rDLCRegionTnmntTableNative")] = ".dtnmt";
    fileExtsReversed[jamcrc(u8"rDLCSubQuestDataNative")] = ".dsuqd";
    fileExtsReversed[jamcrc(u8"rDLCVsRuleTableNative")] = ".dvsrule";
    fileExtsReversed[jamcrc(u8"rEnemyCameraParamNative")] = ".ecpd";
    fileExtsReversed[jamcrc(u8"rLimitedShopDataNative")] = ".lshpd";
    fileExtsReversed[jamcrc(u8"rLimitedShopPlaceDataNative")] = ".lshppd";
    fileExtsReversed[jamcrc(u8"rLinkPrizeDataNative")] = ".lpd";
    fileExtsReversed[jamcrc(u8"rMedalCompRewardNative")] = ".mcr";
    fileExtsReversed[jamcrc(u8"rMonsterEnumConversionTableNative")] = ".mectd";
    fileExtsReversed[jamcrc(u8"rNavirouAccessoryDataNative")] = ".nad";
    fileExtsReversed[jamcrc(u8"rNestEggReviewANative")] = ".nstera";
    fileExtsReversed[jamcrc(u8"rNestEggReviewBNative")] = ".nsterb";
    fileExtsReversed[jamcrc(u8"rNestMessageNative")] = ".nstmsg";
    fileExtsReversed[jamcrc(u8"rOtomonCameraParamNative")] = ".ocpd";
    fileExtsReversed[jamcrc(u8"rPostmanRewardDataNative")] = ".pmrd";
    fileExtsReversed[jamcrc(u8"rStaffRollCutDataNative")] = ".srcd";
    fileExtsReversed[jamcrc(u8"rWorldMapMaskDataNative")] = ".wmmd";
    fileExtsReversed[jamcrc(u8"rTalkDemoViewSpriteDataNative")] = ".tdvs";
    fileExtsReversed[jamcrc(u8"rArmorParamNative")] = ".arp";
    fileExtsReversed[jamcrc(u8"rDLCTableNative")] = ".dlc";
    fileExtsReversed[jamcrc(u8"rMedalDataListNative")] = ".mdl";
    fileExtsReversed[jamcrc(u8"rMyhouseBoxCameraDataNative")] = ".mbcd";
    fileExtsReversed[jamcrc(u8"rStoryTalkBalloonNative")] = ".stb";
    fileExtsReversed[jamcrc(u8"rWeaponParamNative")] = ".wpp";
    fileExtsReversed[jamcrc(u8"rBattleEnemyFileNative")] = ".bef";
    fileExtsReversed[jamcrc(u8"rConditionPriorityDataNative")] = ".cndp";
    fileExtsReversed[jamcrc(u8"rGatherLevelTableNative")] = ".ghlt";
    fileExtsReversed[jamcrc(u8"rLimitedShopNpcList")] = ".lsnl";
    fileExtsReversed[jamcrc(u8"rMonsterBookDataNative")] = ".mbd";
    fileExtsReversed[jamcrc(u8"rPresetParamNative")] = ".tpp";
    fileExtsReversed[jamcrc(u8"rPresetParamEquipNative")] = ".tppe";
    fileExtsReversed[jamcrc(u8"rPresetParamItemNative")] = ".tppi";
    fileExtsReversed[jamcrc(u8"rPresetParamPlayerNative")] = ".tppp";
    fileExtsReversed[jamcrc(u8"rSkillFlagNative")] = ".skf";
    fileExtsReversed[jamcrc(u8"rAppMovie")] = ".dat";
    fileExtsReversed[jamcrc(u8"rAppMovieIntermediate")] = ".wmv";
    fileExtsReversed[jamcrc(u8"rCardPose")] = ".cps";
    fileExtsReversed[jamcrc(u8"rRideParamNative")] = ".rdp";
    fileExtsReversed[jamcrc(u8"rSequenceCameraList")] = ".scl";
    fileExtsReversed[jamcrc(u8"rResourceNameForDevNative")] = ".rnmd";
    fileExtsReversed[jamcrc(u8"rChestItemTableDataNative")] = ".cfid";
    fileExtsReversed[jamcrc(u8"rGatherSetTableDataNative")] = ".gstd";
    fileExtsReversed[jamcrc(u8"rFldPlParam_ARNative")] = ".fppar";
    fileExtsReversed[jamcrc(u8"rFldPlParam_GRNative")] = ".fppgr";
    fileExtsReversed[jamcrc(u8"rFldPlParam_NRNative")] = ".fppnr";
    fileExtsReversed[jamcrc(u8"rFldPlParam_WRNative")] = ".fppwr";
    fileExtsReversed[jamcrc(u8"rAccessoryDataNative")] = ".acd";
    fileExtsReversed[jamcrc(u8"rAccessoryRareNative")] = ".acr";
    fileExtsReversed[jamcrc(u8"rAccessorySkillNative")] = ".acs";
    fileExtsReversed[jamcrc(u8"rArmorDataNative")] = ".ard";
    fileExtsReversed[jamcrc(u8"rBattleArenaTableNative")] = ".bat";
    fileExtsReversed[jamcrc(u8"rBattleCommonResourceNative")] = ".bcmr";
    fileExtsReversed[jamcrc(u8"rBattleEnemySetNative")] = ".bes";
    fileExtsReversed[jamcrc(u8"rBattleEnemyTblNative")] = ".bemt";
    fileExtsReversed[jamcrc(u8"rBattleEnemyTblPlanNative")] = ".bemtp";
    fileExtsReversed[jamcrc(u8"rBattleNpcTblNative")] = ".bnt";
    fileExtsReversed[jamcrc(u8"rBattlePlayerTblNative")] = ".bplt";
    fileExtsReversed[jamcrc(u8"rBattleResultBonusNative")] = ".brsb";
    fileExtsReversed[jamcrc(u8"rBattleStageResourceNative")] = ".bstr";
    fileExtsReversed[jamcrc(u8"rBattleWeaponTblNative")] = ".bwpt";
    fileExtsReversed[jamcrc(u8"rBroilerFlavorDataNative")] = ".bfd";
    fileExtsReversed[jamcrc(u8"rBuddyPathDataNative")] = ".bdypa";
    fileExtsReversed[jamcrc(u8"rBuddyPlanDataNative")] = ".bdypl";
    fileExtsReversed[jamcrc(u8"rCallingEncountDataNative")] = ".sce";
    fileExtsReversed[jamcrc(u8"rConditionNameDataNative")] = ".cnd";
    fileExtsReversed[jamcrc(u8"rDemoDataNative")] = ".dmd";
    fileExtsReversed[jamcrc(u8"rDemoFlagDataNative")] = ".dfd";
    fileExtsReversed[jamcrc(u8"rEggBaseColorDataNative")] = ".ebc";
    fileExtsReversed[jamcrc(u8"rEncntEnemyPartyNative")] = ".eepd";
    fileExtsReversed[jamcrc(u8"rEquiprShopDataNative")] = ".eshd";
    fileExtsReversed[jamcrc(u8"rFieldAISetActNative")] = ".fasa";
    fileExtsReversed[jamcrc(u8"rFieldAISetKindNative")] = ".fask";
    fileExtsReversed[jamcrc(u8"rFieldEnemyPathDataNative")] = ".fedpa";
    fileExtsReversed[jamcrc(u8"rFieldEnemyPlanDataNative")] = ".fedpl";
    fileExtsReversed[jamcrc(u8"rFieldHuntingDataNative")] = ".fhd";
    fileExtsReversed[jamcrc(u8"rFieldMotionPackageDataNative")] = ".fmpd";
    fileExtsReversed[jamcrc(u8"rFieldNpcMotionNative")] = ".fnmd";
    fileExtsReversed[jamcrc(u8"rFieldPlayerMotionDataNative")] = ".fpm";
    fileExtsReversed[jamcrc(u8"rFieldSetFlagDataNative")] = ".fsfd";
    fileExtsReversed[jamcrc(u8"rFurattoFieldDataNative")] = ".fofd";
    fileExtsReversed[jamcrc(u8"rFurattoTrendDataNative")] = ".fotd";
    fileExtsReversed[jamcrc(u8"rGalleryFlagDataNative")] = ".gfd";
    fileExtsReversed[jamcrc(u8"rGatherCommentDataNative")] = ".gcd";
    fileExtsReversed[jamcrc(u8"rGeneEditNative")] = ".ged";
    fileExtsReversed[jamcrc(u8"rGeneLottingNative")] = ".glt";
    fileExtsReversed[jamcrc(u8"rGeneralCountDataNative")] = ".gcd";
    fileExtsReversed[jamcrc(u8"rGeneralFlagDataNative")] = ".gfd";
    fileExtsReversed[jamcrc(u8"rGeneTableNative")] = ".gtb";
    fileExtsReversed[jamcrc(u8"rItemDataNative")] = ".itm";
    fileExtsReversed[jamcrc(u8"rItemMixNative")] = ".mix";
    fileExtsReversed[jamcrc(u8"rMainQuestDataNative")] = ".mqsd";
    fileExtsReversed[jamcrc(u8"rMapMarkerNative")] = ".mmk";
    fileExtsReversed[jamcrc(u8"rMarkerDataNative")] = ".mkr";
    fileExtsReversed[jamcrc(u8"rMaterialDataNative")] = ".matd";
    fileExtsReversed[jamcrc(u8"rMergeStreamDataNative")] = ".asd";
    fileExtsReversed[jamcrc(u8"rMixFlagNative")] = ".mxf";
    fileExtsReversed[jamcrc(u8"rMonsterRankTableNative")] = ".mrt";
    fileExtsReversed[jamcrc(u8"rNekoTaxiStationDataNative")] = ".nsd";
    fileExtsReversed[jamcrc(u8"rNestHappeningNative")] = ".nhap";
    fileExtsReversed[jamcrc(u8"rNestHappeningProbNative")] = ".nhapp";
    fileExtsReversed[jamcrc(u8"rNpcAirouSetResourceLogDataNative")] = ".nasl";
    fileExtsReversed[jamcrc(u8"rNpcSetResourceLogDataNative")] = ".npsl";
    fileExtsReversed[jamcrc(u8"rReactionCommentDataNative")] = ".rcd";
    fileExtsReversed[jamcrc(u8"rRiderNoteDataNative")] = ".rnd";
    fileExtsReversed[jamcrc(u8"rRiderNoteLargeCategoryDataNative")] = ".rnld";
    fileExtsReversed[jamcrc(u8"rRiderNotePageDataNative")] = ".rnpd";
    fileExtsReversed[jamcrc(u8"rRiderNoteSmallCategoryDataNative")] = ".rnsd";
    fileExtsReversed[jamcrc(u8"rRiderNoteThumbnailDataNative")] = ".rntd";
    fileExtsReversed[jamcrc(u8"rShortDemoDataNative")] = ".sdm";
    fileExtsReversed[jamcrc(u8"rSkillTableNative")] = ".skt";
    fileExtsReversed[jamcrc(u8"rStChapDataNative")] = ".schd";
    fileExtsReversed[jamcrc(u8"rStEpiDataNative")] = ".sed";
    fileExtsReversed[jamcrc(u8"rStoryCountDataNative")] = ".scod";
    fileExtsReversed[jamcrc(u8"rStoryDataNative")] = ".std";
    fileExtsReversed[jamcrc(u8"rStoryFlagDataNative")] = ".stfd";
    fileExtsReversed[jamcrc(u8"rStPrComDataNative")] = ".spcd";
    fileExtsReversed[jamcrc(u8"rSubQuestCountDataNative")] = ".sqcd";
    fileExtsReversed[jamcrc(u8"rSubQuestFlagDataNative")] = ".sqfd";
    fileExtsReversed[jamcrc(u8"rSubStEpiDataNative")] = ".ssed";
    fileExtsReversed[jamcrc(u8"rSystemCountDataNative")] = ".sycd";
    fileExtsReversed[jamcrc(u8"rTalkDemoActorDataNative")] = ".tdmact";
    fileExtsReversed[jamcrc(u8"rTalkDemoCommandDataNative")] = ".tdmcmd";
    fileExtsReversed[jamcrc(u8"rTalkDemoDataNative")] = ".tdmd";
    fileExtsReversed[jamcrc(u8"rTalkDemoEffectDataNative")] = ".tdmeff";
    fileExtsReversed[jamcrc(u8"rTalkDemoFaceDataNative")] = ".tdmfc";
    fileExtsReversed[jamcrc(u8"rTalkDemoMotionDataNative")] = ".tdmmot";
    fileExtsReversed[jamcrc(u8"rTalkDemoPoseDataNative")] = ".tdmpos";
    fileExtsReversed[jamcrc(u8"rTalkDemoScript")] = ".tdms";
    fileExtsReversed[jamcrc(u8"rTalkInfoDataNative")] = ".tid";
    fileExtsReversed[jamcrc(u8"rTalkMsgDataNative")] = ".tmd";
    fileExtsReversed[jamcrc(u8"rTalkSelectDataNative")] = ".tstd";
    fileExtsReversed[jamcrc(u8"rWeaponDataNative")] = ".wpd";
    fileExtsReversed[jamcrc(u8"rFieldGateDataNative")] = ".fgd";
    fileExtsReversed[jamcrc(u8"rMHFSMList")] = ".fslm";
    fileExtsReversed[jamcrc(u8"rWipeData")] = ".wpdt";
    fileExtsReversed[jamcrc(u8"rBattleAtkNative")] = ".btat";
    fileExtsReversed[jamcrc(u8"rFieldBuddyMotionDataNative")] = ".fbd";
    fileExtsReversed[jamcrc(u8"rFieldDataNative")] = ".fld";
    fileExtsReversed[jamcrc(u8"rFieldEnemySetDataNative")] = ".fesd";
    fileExtsReversed[jamcrc(u8"rFieldIngredientSetDataNative")] = ".fisd";
    fileExtsReversed[jamcrc(u8"rFieldMotionDataNative")] = ".fmd";
    fileExtsReversed[jamcrc(u8"rFieldOrnamentSetDataNative")] = ".fosd";
    fileExtsReversed[jamcrc(u8"rFieldPredatorDataNative")] = ".fprd";
    fileExtsReversed[jamcrc(u8"rFieldSchedulerSetDataNative")] = ".fssd";
    fileExtsReversed[jamcrc(u8"rMonsterRaceDataNative")] = ".mrd";
    fileExtsReversed[jamcrc(u8"rNpcTalkNative")] = ".ntk";
    fileExtsReversed[jamcrc(u8"rShopDataNative")] = ".shp";
    fileExtsReversed[jamcrc(u8"rSystemFlagDataNative")] = ".sfd";
    fileExtsReversed[jamcrc(u8"rTalkDataNative")] = ".tlk";
    fileExtsReversed[jamcrc(u8"rProofEffectColorControl")] = ".pec";
    fileExtsReversed[jamcrc(u8"rProofEffectList")] = ".pel";
    fileExtsReversed[jamcrc(u8"rProofEffectMotSequenceList")] = ".psl";
    fileExtsReversed[jamcrc(u8"rProofEffectParamScript")] = ".pep";
    fileExtsReversed[jamcrc(u8"rCameraData")] = ".cmdt";
    fileExtsReversed[jamcrc(u8"rColorLinkColor")] = ".clc";
    fileExtsReversed[jamcrc(u8"rColorLinkInfo")] = ".cli";
    fileExtsReversed[jamcrc(u8"rConditionChangeInfo")] = ".ccinfo";
    fileExtsReversed[jamcrc(u8"rDollPartsDisp")] = ".dpd";
    fileExtsReversed[jamcrc(u8"rGroundAdjustment")] = ".gar";
    fileExtsReversed[jamcrc(u8"rModelEasyAnime")] = ".mea";
    fileExtsReversed[jamcrc(u8"rModelInPath")] = ".mip";
    fileExtsReversed[jamcrc(u8"rMonsterPartsDisp")] = ".mpd";
    fileExtsReversed[jamcrc(u8"rNavirouPartsDisp")] = ".npd";
    fileExtsReversed[jamcrc(u8"rPartsVisibleInfo")] = ".pvi";
    fileExtsReversed[jamcrc(u8"rSchedulerPreLoadList")] = ".spll";
    fileExtsReversed[jamcrc(u8"rShadowParamNative")] = ".swp";
    fileExtsReversed[jamcrc(u8"rVirtualJoint")] = ".vjr";
    fileExtsReversed[jamcrc(u8"rWeaponGimmickInfo")] = ".wgi";
    fileExtsReversed[jamcrc(u8"rWeaponOfsForBodyNative")] = ".wofb";
    fileExtsReversed[jamcrc(u8"cResource")] = ".ext";
    fileExtsReversed[jamcrc(u8"rModel")] = ".mod";
    fileExtsReversed[jamcrc(u8"rMotionList")] = ".lmt";
    fileExtsReversed[jamcrc(u8"rTexture")] = ".tex";
    fileExtsReversed[jamcrc(u8"rCollision")] = ".sbc";
    fileExtsReversed[jamcrc(u8"rAIWayPointGraph")] = ".gway";
    fileExtsReversed[jamcrc(u8"rScheduler")] = ".sdl";
    fileExtsReversed[jamcrc(u8"rArchive")] = ".arc";
    fileExtsReversed[jamcrc(u8"rCnsTinyChain")] = ".ctc";
    fileExtsReversed[jamcrc(u8"rChain")] = ".chn";
    fileExtsReversed[jamcrc(u8"rChainCol")] = ".ccl";
    fileExtsReversed[jamcrc(u8"rAIFSM")] = ".fsm";
    fileExtsReversed[jamcrc(u8"rAIFSMList")] = ".fsl";
    fileExtsReversed[jamcrc(u8"rAIConditionTree")] = ".cdt";
    fileExtsReversed[jamcrc(u8"rCameraList")] = ".lcm";
    fileExtsReversed[jamcrc(u8"rGUI")] = ".gui";
    fileExtsReversed[jamcrc(u8"rRenderTargetTexture")] = ".rtex";
    fileExtsReversed[jamcrc(u8"rEffect2D")] = ".e2d";
    fileExtsReversed[jamcrc(u8"rGUIFont")] = ".gfd";
    fileExtsReversed[jamcrc(u8"rGUIIconInfo")] = ".gii";
    fileExtsReversed[jamcrc(u8"rGUIStyle")] = ".gst";
    fileExtsReversed[jamcrc(u8"rGUIMessage")] = ".gmd";
    fileExtsReversed[jamcrc(u8"rDeformWeightMap")] = ".dwm";
    fileExtsReversed[jamcrc(u8"rSwingModel")] = ".swm";
    fileExtsReversed[jamcrc(u8"rVibration")] = ".vib";
    fileExtsReversed[jamcrc(u8"rSoundRequest")] = ".srqr";
    fileExtsReversed[jamcrc(u8"rSoundStreamRequest")] = ".stqr";
    fileExtsReversed[jamcrc(u8"rSoundCurveSet")] = ".scsr";
    fileExtsReversed[jamcrc(u8"rSoundDirectionalSet")] = ".sdsr";
    fileExtsReversed[jamcrc(u8"rSoundEQ")] = ".equr";
    fileExtsReversed[jamcrc(u8"rSoundReverb")] = ".revr";
    fileExtsReversed[jamcrc(u8"rSoundCurveXml")] = ".scvr.xml";
    fileExtsReversed[jamcrc(u8"rSoundDirectionalCurveXml")] = ".sdcr.xml";
    fileExtsReversed[jamcrc(u8"rSoundBank")] = ".sbkr";
    fileExtsReversed[jamcrc(u8"rSoundPhysicsRigidBody")] = ".sprr";
    fileExtsReversed[jamcrc(u8"rSoundPhysicsSoftBody")] = ".spsr";
    fileExtsReversed[jamcrc(u8"rSoundPhysicsJoint")] = ".spjr";
    fileExtsReversed[jamcrc(u8"rShader2")] = ".mfx";
    fileExtsReversed[jamcrc(u8"rImplicitSurface")] = ".is";
    fileExtsReversed[jamcrc(u8"rMovie")] = ".ext";
    fileExtsReversed[jamcrc(u8"rMovieOnMemory")] = ".mem.wmv";
    fileExtsReversed[jamcrc(u8"rMovieOnDisk")] = ".wmvd";
    fileExtsReversed[jamcrc(u8"rMovieOnMemoryInterMediate")] = ".mem.wmv";
    fileExtsReversed[jamcrc(u8"rMovieOnDiskInterMediate")] = ".wmvd";
    fileExtsReversed[jamcrc(u8"rSceneTexture")] = ".stex";
    fileExtsReversed[jamcrc(u8"rGrass2")] = ".gr2";
    fileExtsReversed[jamcrc(u8"rGrass2Setting")] = ".gr2s";
    fileExtsReversed[jamcrc(u8"rOccluder")] = ".occ";
    fileExtsReversed[jamcrc(u8"rISC")] = ".isc";
    fileExtsReversed[jamcrc(u8"rSky")] = ".sky";
    fileExtsReversed[jamcrc(u8"rStarCatalog")] = ".stc";
    fileExtsReversed[jamcrc(u8"rCloud")] = ".cld";
    fileExtsReversed[jamcrc(u8"rSoundSourcePC")] = ".ext";
    fileExtsReversed[jamcrc(u8"rSoundSourceMSADPCM")] = ".xsew";
    fileExtsReversed[jamcrc(u8"rSoundSourceOggVorbis")] = ".sngw";
    fileExtsReversed[jamcrc(u8"rEffectList")] = ".efl";
    fileExtsReversed[jamcrc(u8"rCollisionHeightField")] = ".sbch";
    fileExtsReversed[jamcrc(u8"rCnsIK")] = ".ik";
    fileExtsReversed[jamcrc(u8"rShaderPackage")] = ".spkg";
    fileExtsReversed[jamcrc(u8"rShaderCache")] = ".sch";
    fileExtsReversed[jamcrc(u8"rMaterial")] = ".mrl";
    fileExtsReversed[jamcrc(u8"rSoundSpeakerSetXml")] = ".sssr.xml";
    fileExtsReversed[jamcrc(u8"rCollisionObj")] = ".obc";
    fileExtsReversed[jamcrc(u8"rGrass")] = ".grs";
    fileExtsReversed[jamcrc(u8"rConstraint")] = ".ext";
    fileExtsReversed[jamcrc(u8"rCnsLookAt")] = ".lat";
    fileExtsReversed[jamcrc(u8"rEffectAnim")] = ".ean";
    fileExtsReversed[jamcrc(u8"rEffectStrip")] = ".efs";
    fileExtsReversed[jamcrc(u8"rVertices")] = ".vts";
    fileExtsReversed[jamcrc(u8"rNulls")] = ".nls";
    fileExtsReversed[jamcrc(u8"rAI")] = ".ais";
    fileExtsReversed[jamcrc(u8"rSoundPhysicsList")] = ".splr";
    fileExtsReversed[jamcrc(u8"rFacialAnimation")] = ".fca";
    fileExtsReversed[jamcrc(u8"rMetaSet")] = ".mst";
    fileExtsReversed[jamcrc(u8"rMetaSetXml")] = ".mst.xml";
    fileExtsReversed[jamcrc(u8"rCnsTinyIK")] = ".tik";
    fileExtsReversed[jamcrc(u8"rCnsScaleNormalize")] = ".scl";
    fileExtsReversed[jamcrc(u8"rCnsRotateLimit")] = ".lim";
    fileExtsReversed[jamcrc(u8"rCnsMatrix")] = ".mtx";
    fileExtsReversed[jamcrc(u8"rCnsJointOffset")] = ".jof";
    fileExtsReversed[jamcrc(u8"rCnsParent")] = ".par";
    fileExtsReversed[jamcrc(u8"rCnsParentN")] = ".pan";
    fileExtsReversed[jamcrc(u8"rCnsLookAtEyeball")] = ".eye";
    fileExtsReversed[jamcrc(u8"rGraphPatch")] = ".gpt";
    fileExtsReversed[jamcrc(u8"rGrassWind")] = ".grw";
    fileExtsReversed[jamcrc(u8"rConvexHull")] = ".hul";
    fileExtsReversed[jamcrc(u8"rGeometry2")] = ".geo2";
    fileExtsReversed[jamcrc(u8"rGeometry3")] = ".geo3";
    fileExtsReversed[jamcrc(u8"rSerial")] = ".srt";
    fileExtsReversed[jamcrc(u8"rDynamicSbc")] = ".dsc";
    fileExtsReversed[jamcrc(u8"rGeometry2Group")] = ".geog";
}
